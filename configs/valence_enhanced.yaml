# LTC-NCP-VA 价值增强配置
# 经过调整的超参数设置，重点优化价值(Valence)预测

# 数据配置
data:
  train_path: "data/processed_clean/merged_train_clean.csv"
  val_path: "data/processed_clean/merged_val_clean.csv"
  text_col: "text"
  v_col: "V"
  a_col: "A"
  meta_features:
    - "text_length"
    - "punct_density"
    - "sentence_count"  # 增加句子数量作为额外特征
  max_length: 150  # 适当增加最大长度以捕获更完整的情感表达
  use_meta_features: true
  oversample_extreme_valence: true  # 加强上采样极端V值样本
  analyze_before_training: false     # 禁用训练前数据分析
  confirm_training: false            # 不询问确认，强制继续
  
# 模型配置 - 优化针对valence的架构参数
model:
  type: "ltc_ncp"
  embedding_dim: 256  # 嵌入维度
  hidden_size: 128    # 减小隐藏层大小以避免维度过大问题
  dropout: 0.25  # 稍微降低dropout以减少过拟合风险并保留更多信息
  sparsity_level: 0.25  # 降低稀疏度，增加连接密度，提高表达能力
  dt: 0.08  # 减小时间步长，增加精度
  integration_method: "euler"  # 使用简单的欧拉方法
  bidirectional: true
  # 新增价值增强参数
  enhance_valence: true  # 启用价值预测增强
  valence_layers: 2      # 价值分支使用2个额外层
  # 新增NCP增强参数
  wiring_type: "structured"  # 使用结构化连接模式
  multi_level: true  # 启用多层次LTC结构
  emotion_focused: true  # 启用情感感知连接
  heterogeneous: true  # 使用异构连接密度
  # 新增Mini-Transformer参数
  use_transformer: true  # 启用Mini-Transformer架构
  transformer:
    num_layers: 4    # 减少层数以避免维度过大问题
    num_heads: 4     # 减少头数
    dim_feedforward: 512  # 减小前馈网络维度
    dropout: 0.2     # Transformer专用dropout
  # 情感轴反转设置
  invert_valence: false
  invert_arousal: false
  
# 训练配置 - 优化训练动态
training:
  epochs: 50  # 增加轮数以便更充分训练
  batch_size: 24  # 降低批次大小，提高泛化能力
  learning_rate: 0.0008  # 降低学习率以获得更稳定的收敛
  weight_decay: 0.00005  # 适度增加权重衰减以减少过拟合
  clip_grad_norm: 1.0  # 保持梯度裁剪阈值
  scheduler:
    type: "cosine_with_restarts"  # 使用带重启的余弦退火调度提高收敛质量
    restarts: 3  # 3次重启
    warmup_epochs: 2  # 预热轮数
  optimizer: "adamw"  # 使用AdamW优化器
  use_amp: true
  seed: 42
  patience: 15  # 增加耐心值
  
# 高级优化技术
optimization:
  label_smoothing: 0.03  # 减少标签平滑，让模型学习更精确的价值
  mixup_alpha: 0.15  # 减少Mixup强度，保留更多原始情感信息
  gradient_accumulation_steps: 3  # 增加梯度累积步数，模拟更大批次
  freeze_embedding_epochs: 0  # 不冻结嵌入层
  use_mse_ccc_loss: false
  freeze_a_head_epochs: 8  # 前8轮冻结A头，强制模型先学习valence
  
# 损失函数设置
loss:
  mse_weight: 1.0
  ccc_weight: 0.3  # 增加CCC权重以提高一致性
  use_direction_loss: true   # 启用情感方向感知损失
  direction_weight: 1.2      # 增加方向损失权重，更强调象限正确性
  valence_weight: 2.0        # 显著增加价值损失权重

# 评估配置
evaluation:
  metrics:
    - "mse"
    - "rmse"
    - "mae"
    - "ccc"
    - "spearman"
    - "pearson"
  best_metric: "rmse"  # 用于选择最佳模型的指标
  higher_better: false
  patience: 15  # 保持早停策略的耐心值
  
# 日志和存储
logging:
  log_dir: "runs/valence_enhanced"
  log_every: 10
  save_model: true
  tensorboard: true
  save_dir: "runs/valence_enhanced"
  save_checkpoints: true
  checkpoints_interval: 5
  log_interval: 10
  
# 硬件设置
hardware:
  device: "cuda" 
  seed: 42
  num_workers: 6
  precision: "mixed"  # 使用混合精度训练
  
# 可视化设置
visualization:
  enabled: true
  n_samples: 200  # 增加可视化样本数量
  output_dir: "results/plots/valence_enhanced"
  confusion_matrix: true
  attention_maps: true

# 输出目录设置
output_dir: "results/valence_enhanced" 